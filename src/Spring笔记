1.配置bean
 <bean id="helloWorld" class="com.study.spring.HelloWorld">
        <property name="name" value="Spring"/>
 </bean>

 class:bean的全类名，通过反射在IOC容器中创建bean的实例，所以要求bean类必须有一个无参的构造函数
 id:标识bean，必须唯一

 2.ApplicationContext代表IOC容器，有两个实现类
 ClassPathXmlApplicationContext
 FileSystemXmlApplicationContext

 3.Spring依赖注入的方式
    属性注入
    构造器注入
    工厂方法注入(很少使用，不推荐)
 4.使用构造器注入可以指定参数位置和类型，以区分重载的构造器
 5.Spring配置文件中特殊字符的处理(&<>""'五个符号)
    1.使用![CDATA[]]将字符包起来
    2.使用转义字符
    属性可以使用value属性或者value子节点配置

  6.使用级联属性时，要保证JavaBean中有对应的setXxx方法
         <bean id="person2" class="com.study.spring.Person">
                <constructor-arg value="天猫" type="java.lang.String"/>
                <constructor-arg value="23" type="int"/>
                <!--<constructor-arg><null/></constructor-arg>-->
                <constructor-arg ref="car2"/>
                <!--为级联属性赋值-->
                <property name="car.price" value="3333"/>
                <property name="car.address" value="北京"/>
            </bean>
   使用级联属性需要先为属性赋值，才能使用级联属性，否则会抛异常，和Struts2不同
   7.为list属性赋值
    <property name="cars">
               <list>
                   <ref bean="car"/>
                   <ref bean="car2"/>
               </list>
           </property>
    8.为map属性赋值
        使用map以及map的子节点entry
    9.配置Properties
        通过props和prop节点配置
              <property name="properties">
                        <props>
                            <prop key="username">root</prop>
                            <prop key="password">123456</prop>
                        </props>
                    </property>
        使用p命名空间简化属性配置
         <!--通过p命名空间为bean的属性赋值-->
            <bean id="person6" class="com.study.spring.Person"
                  p:age="12" p:name="lxn" p:cars-ref="cars"/>

        10.自动装配
            byName:根据bean在struts.xml中配置的id和bean的setter方法风格的属性进行装配，若匹配，则装配，否则不装配
            byType:根据bean的类型和当前bean的属性的类型装配，若容器中有一个以上bean的类型相同，则出异常

            自动装配缺点：不能装配个别属性
            不能同时根据name和type装配，不够灵活

        11.bean的关系
            bean可以通过parent属性引用一个bean，继承它的配置属性，如果bean添加属性abstrat属性
            ，那么它将作为一个模版，不能被实例化
